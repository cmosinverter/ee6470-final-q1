// Generated by stratus_hls 21.20-p100  (96289.240513)
// Fri May 26 15:17:01 2023
// from dut.cc

`timescale 1ps / 1ps


module dut( clk, rst, din_busy, din_vld, din_data, dout_busy, dout_vld, dout_data );

    input clk;
    input rst;
    input din_vld;
    input din_data;
    input dout_busy;
    output din_busy;
    output dout_vld;
    output [15:0] dout_data;
    reg [15:0] dout_data;
    reg dout_m_req_m_prev_trig_req;
    reg dout_m_unacked_req;
    wire dut_Xor_1Ux1U_1U_1_1_out1;
    wire dut_Or_1Ux1U_1U_4_2_out1;
    reg dut_N_Muxb_1_2_5_4_4_out1;
    reg din_m_unvalidated_req;
    wire dut_gen_busy_r_4_64_gnew_req;
    wire dut_gen_busy_r_4_64_gdiv;
    wire dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next;
    reg[2:0] global_state_next;
    /*signed*/wire[4:0] dut_Lti8s5_1_61_in1;
    reg[15:0] dut_N_Mux_16_2_3_4_53_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_52_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_51_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_50_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_49_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_48_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_47_out1;
    reg[15:0] dut_N_Mux_16_2_3_4_45_out1;
    wire[15:0] dut_Add_16Ux16U_16U_4_44_out1;
    wire dut_And_1Ux1U_1U_4_43_out1;
    wire dut_And_1Ux1U_1U_4_42_out1;
    /*signed*/wire[4:0] dut_Lti8s5_1_41_in1;
    wire dut_And_1Ux1U_1U_4_40_out1;
    reg[15:0] dut_N_Mux_16_2_4_4_39_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_38_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_37_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_36_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_35_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_34_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_33_out1;
    reg[15:0] dut_N_Mux_16_2_2_4_32_out1;
    reg[15:0] dut_N_Mux_16_8_1_4_31_out1;
    reg[15:0] dut_N_Mux_16_8_0_4_30_out1;
    wire dut_Not_1U_1U_4_29_out1;
    wire dut_Eqi5u3_4_10_out1;
    wire dut_Eqi6u3_4_9_out1;
    wire dut_Eqi7u3_4_8_out1;
    reg[2:0] dut_Eqi7u3_4_8_in1;
    /*signed*/reg[3:0] dut_Gti0s5_4_7_in1_slice;
    reg gs_ctrl_thread1_h8;
    reg[2:0] dut_Add2i1u3_4_6_in1;
    reg gs_ctrl_thread1_h10;
    reg[15:0] dut_N_Mux_16_2_3_4_57_out1;
    reg[15:0] s_reg_9;
    reg[15:0] dut_N_Mux_16_2_3_4_58_out1;
    reg[15:0] s_reg_8;
    reg[15:0] dut_N_Mux_16_2_3_4_59_out1;
    reg[15:0] s_reg_7;
    wire[3:0] dut_Add2i1u3_4_6_out1;
    reg[3:0] s_reg_6_slice;
    reg s_reg_33;
    wire dut_Eqi1u3_4_24_out1;
    reg s_reg_29;
    wire dut_Eqi3u3_4_22_out1;
    reg s_reg_27;
    wire dut_Eqi4u3_4_15_out1;
    reg s_reg_26;
    wire dut_Eqi5u3_4_20_out1;
    reg s_reg_25;
    wire dut_Eqi6u3_4_19_out1;
    wire dut_And_1Ux1U_1U_4_26_out1;
    reg s_reg_24;
    wire dut_Eqi7u3_4_18_out1;
    wire dut_And_1Ux1U_1U_4_25_out1;
    reg s_reg_23;
    wire dut_Eqi2u3_4_23_out1;
    reg s_reg_22;
    wire dut_OrReduction_3U_1U_4_14_out1;
    reg s_reg_21;
    wire dut_And_1Ux1U_1U_4_13_out1;
    reg s_reg_20;
    wire dut_And_1Ux1U_1U_4_12_out1;
    reg s_reg_19;
    wire dut_And_1Ux1U_1U_4_11_out1;
    reg s_reg_18;
    wire dut_Gti0s5_4_7_out1;
    reg s_reg_17;
    reg[2:0] s_reg_16;
    wire[3:0] dut_Add2i1u3_4_27_out1;
    reg[3:0] s_reg_15_slice;
    reg[15:0] dut_N_Mux_16_2_3_4_60_out1;
    reg[15:0] s_reg_14;
    reg[15:0] dut_N_Mux_16_2_3_4_54_out1;
    reg[15:0] s_reg_12;
    reg[15:0] dut_N_Mux_16_2_3_4_55_out1;
    reg[15:0] s_reg_11;
    reg[15:0] dut_N_Mux_16_2_3_4_56_out1;
    reg[15:0] s_reg_10;
    wire dut_And_1Ux1U_1U_4_62_out1;
    wire[2:0] dut_gen_busy_r_4_64_out1;
    wire dut_Not_1U_1U_1_3_out1;
    wire dut_Lti8s5_1_41_out1;
    wire dut_Lti8s5_1_61_out1;
    reg dout_m_req_m_trig_req;
    reg din_m_busy_req_0;
    reg[15:0] dut_N_Mux_16_2_3_4_46_out1;
    reg[2:0] global_state;
    reg stall0;

    
    // rtl_process:dut/drive_dout_data
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_dout_data
    // at: cynw_p2p.h:5314:13
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_dout_data
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP64
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    dout_data <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP131
                    // at: cynw_p2p.h:5314:13
                    // Call Stack: 
                    // in function nb_put_work called from cynw_p2p.h:5077:7
                    // in function put called from dut.cc:75:8
                    dout_data <= dut_N_Mux_16_2_3_4_46_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_din_m_busy_req_0
    // Sharing or Control mux
    // Sharing/Controlling 5 operation(s) on drive_din_m_busy_req_0
    // at: cynw_p2p.h:1801:17
    // at: cynw_p2p.h:1510:2
    // at: cynw_p2p.h:1590:7
    // at: cynw_p2p.h:1615:7
    // at: cynw_p2p.h:1756:12
    
    always @(posedge clk)
      begin : drive_din_m_busy_req_0
        if (rst == 1'b0) 
          begin
            // op:thread1/OP36
            // at: cynw_p2p.h:1510:2
            // Call Stack: 
            // in function reset called from dut.cc:35:7
            din_m_busy_req_0 <= 1'd1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    3'd0, 3'd3, 3'd4, 3'd5: 
                      begin
                        // op:thread1/OP67
                        // at: cynw_p2p.h:1590:7
                        // Call Stack: 
                        // in function get_start called from cynw_p2p.h:1450:7
                        // in function get called from dut.cc:61:14
                        din_m_busy_req_0 <= 1'd0;
                      end
                    3'd1: 
                      begin
                        // op:thread1/OP70
                        // at: cynw_p2p.h:1615:7
                        // Call Stack: 
                        // in function get_end called from cynw_p2p.h:1473:7
                        // in function get called from dut.cc:61:14
                        din_m_busy_req_0 <= 1'd1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:dut/drive_dout_m_req_m_trig_req
    // Sharing or Control mux
    // Sharing/Controlling 5 operation(s) on drive_dout_m_req_m_trig_req
    // at: cynw_comm_util.h:1447:27
    // at: cynw_comm_util.h:1431:52
    // at: cynw_comm_util.h:1472:26
    // at: cynw_comm_util.h:1392:7
    // at: cynw_comm_util.h:1385:2
    
    always @(posedge clk)
      begin : drive_dout_m_req_m_trig_req
        if (rst == 1'b0) 
          begin
            // op:thread1/OP38
            // at: cynw_comm_util.h:1392:7
            // Call Stack: 
            // in function reset called from cynw_p2p.h:5106:13
            // in function reset called from dut.cc:36:8
            dout_m_req_m_trig_req <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    3'd2: 
                      begin
                        if (!(dut_Lti8s5_1_41_out1 || dut_Lti8s5_1_61_out1)) 
                          begin
                            // op:thread1/OP133
                            // at: cynw_comm_util.h:1385:2
                            // Call Stack: 
                            // in function trig called from cynw_p2p.h:5315:8
                            // in function nb_put_work called from cynw_p2p.h:5077:7
                            // in function put called from dut.cc:75:8
                            dout_m_req_m_trig_req <= dut_Not_1U_1U_1_3_out1;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:dut/drive_stall0
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_stall0
    // at: cynw_p2p.h:1844:47
    // at: cynw_p2p.h:1527:33
    // at: cynw_p2p.h:1459:9
    // at: cynw_p2p.h:5090:2
    always @(dut_And_1Ux1U_1U_4_62_out1 or dut_gen_busy_r_4_64_out1[0] or global_state)
      begin : drive_stall0
        case (global_state) 
          3'd1: 
            begin
              // op:thread1/OP69
              // at: cynw_p2p.h:1459:9
              // Call Stack: 
              // in function get called from dut.cc:61:14
              stall0 = dut_gen_busy_r_4_64_out1[0];
            end
          3'd5: 
            begin
              // op:thread1/OP135
              // at: cynw_p2p.h:5090:2
              // Call Stack: 
              // in function put called from dut.cc:75:8
              stall0 = dut_And_1Ux1U_1U_4_62_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_10
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_10
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_10
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP61
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_10 <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP100
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_10 <= dut_N_Mux_16_2_3_4_56_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_11
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_11
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_11
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP62
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_11 <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP94
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_11 <= dut_N_Mux_16_2_3_4_55_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_12
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_12
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_12
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP63
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_12 <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP88
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_12 <= dut_N_Mux_16_2_3_4_54_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_14
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_14
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_14
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP65
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_14 <= 16'd00001;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP124
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_14 <= dut_N_Mux_16_2_3_4_60_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_15_slice
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_15_slice
    // at: dut.cc:60:36
    // at: dut.cc:60:38
    
    always @(posedge clk)
      begin : drive_s_reg_15_slice
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP66
                    // at: dut.cc:60:36
                    // Call Stack: 
                    // in function thread1 called from dut.cc:60:36
                    s_reg_15_slice <= 4'd00;
                  end
                3'd1: 
                  begin
                    // op:thread1/OP125
                    // at: dut.cc:60:38
                    // Call Stack: 
                    // in function thread1 called from dut.cc:60:38
                    s_reg_15_slice <= dut_Add2i1u3_4_27_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_16
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_16
    // at: dut.cc:65:17
    
    always @(posedge clk)
      begin : drive_s_reg_16
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP73
                    // at: dut.cc:65:17
                    // Call Stack: 
                    // in function thread1 called from dut.cc:65:17
                    s_reg_16 <= 3'd0;
                  end
                3'd3: 
                  begin
                    // op:thread1/OP73
                    // at: dut.cc:65:17
                    // Call Stack: 
                    // in function thread1 called from dut.cc:65:17
                    s_reg_16 <= s_reg_15_slice[2:0];
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_17
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_17
    // at: dut.cc:64:17
    
    always @(posedge clk)
      begin : drive_s_reg_17
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd3, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP72
                    // at: dut.cc:64:17
                    // Call Stack: 
                    // in function thread1 called from dut.cc:64:17
                    s_reg_17 <= dut_Gti0s5_4_7_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_18
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_18
    // at: dut.cc:64:17
    
    always @(posedge clk)
      begin : drive_s_reg_18
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd3, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP79
                    // at: dut.cc:64:17
                    // Call Stack: 
                    // in function thread1 called from dut.cc:64:17
                    s_reg_18 <= dut_And_1Ux1U_1U_4_11_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_19
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_19
    // at: dut.cc:64:17
    
    always @(posedge clk)
      begin : drive_s_reg_19
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd3, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP85
                    // at: dut.cc:64:17
                    // Call Stack: 
                    // in function thread1 called from dut.cc:64:17
                    s_reg_19 <= dut_And_1Ux1U_1U_4_12_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_20
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_20
    // at: dut.cc:64:17
    
    always @(posedge clk)
      begin : drive_s_reg_20
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd3, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP91
                    // at: dut.cc:64:17
                    // Call Stack: 
                    // in function thread1 called from dut.cc:64:17
                    s_reg_20 <= dut_And_1Ux1U_1U_4_13_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_21
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_21
    // at: dut.cc:65:7
    
    always @(posedge clk)
      begin : drive_s_reg_21
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP119
              // at: dut.cc:65:7
              // Call Stack: 
              // in function thread1 called from dut.cc:65:7
              s_reg_21 <= dut_OrReduction_3U_1U_4_14_out1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_22
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_22
    // at: dut.cc:65:7
    // at: dut.cc:63:7
    
    always @(posedge clk)
      begin : drive_s_reg_22
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP107
              // at: dut.cc:63:7
              // Call Stack: 
              // in function thread1 called from dut.cc:63:7
              s_reg_22 <= dut_Eqi2u3_4_23_out1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_23
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_23
    // at: dut.cc:63:7
    // at: dut.cc:64:17
    
    always @(posedge clk)
      begin : drive_s_reg_23
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              if (!din_data) 
                begin
                  // op:thread1/OP97
                  // at: dut.cc:64:17
                  // Call Stack: 
                  // in function thread1 called from dut.cc:64:17
                  s_reg_23 <= dut_And_1Ux1U_1U_4_25_out1;
                end 
              else 
                begin
                  // op:thread1/OP77
                  // at: dut.cc:63:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:63:7
                  s_reg_23 <= dut_Eqi7u3_4_18_out1;
                end
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_24
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_24
    // at: dut.cc:63:7
    // at: dut.cc:64:17
    
    always @(posedge clk)
      begin : drive_s_reg_24
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              if (!din_data) 
                begin
                  // op:thread1/OP103
                  // at: dut.cc:64:17
                  // Call Stack: 
                  // in function thread1 called from dut.cc:64:17
                  s_reg_24 <= dut_And_1Ux1U_1U_4_26_out1;
                end 
              else 
                begin
                  // op:thread1/OP83
                  // at: dut.cc:63:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:63:7
                  s_reg_24 <= dut_Eqi6u3_4_19_out1;
                end
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_25
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_25
    // at: dut.cc:63:7
    
    always @(posedge clk)
      begin : drive_s_reg_25
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP89
              // at: dut.cc:63:7
              // Call Stack: 
              // in function thread1 called from dut.cc:63:7
              s_reg_25 <= dut_Eqi5u3_4_20_out1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_26
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_26
    // at: dut.cc:63:7
    
    always @(posedge clk)
      begin : drive_s_reg_26
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP95
              // at: dut.cc:63:7
              // Call Stack: 
              // in function thread1 called from dut.cc:63:7
              s_reg_26 <= dut_Eqi4u3_4_15_out1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_27
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_27
    // at: dut.cc:63:7
    
    always @(posedge clk)
      begin : drive_s_reg_27
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP101
              // at: dut.cc:63:7
              // Call Stack: 
              // in function thread1 called from dut.cc:63:7
              s_reg_27 <= dut_Eqi3u3_4_22_out1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_29
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_29
    // at: dut.cc:63:7
    
    always @(posedge clk)
      begin : drive_s_reg_29
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP113
              // at: dut.cc:63:7
              // Call Stack: 
              // in function thread1 called from dut.cc:63:7
              s_reg_29 <= dut_Eqi1u3_4_24_out1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_33
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_33
    // at: cynw_p2p.h:1716:20
    
    always @(posedge clk)
      begin : drive_s_reg_33
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              // op:thread1/OP71
              // at: cynw_p2p.h:1716:20
              // Call Stack: 
              // in function use_data called from cynw_p2p.h:1553:8
              // in function nb_get called from cynw_p2p.h:1476:7
              // in function get called from dut.cc:61:14
              s_reg_33 <= din_data;
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_6_slice
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_6_slice
    // at: dut.cc:59:36
    
    always @(posedge clk)
      begin : drive_s_reg_6_slice
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd4, 3'd5: 
                  begin
                    // op:thread1/OP128
                    // at: dut.cc:59:36
                    // Call Stack: 
                    // in function thread1 called from dut.cc:59:36
                    s_reg_6_slice <= dut_Add2i1u3_4_6_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_7
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_7
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_7
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP58
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_7 <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP118
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_7 <= dut_N_Mux_16_2_3_4_59_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_8
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_8
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_8
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP59
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_8 <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP112
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_8 <= dut_N_Mux_16_2_3_4_58_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_s_reg_9
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_s_reg_9
    // at: dut.cc:62:4
    
    always @(posedge clk)
      begin : drive_s_reg_9
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                3'd0, 3'd5: 
                  begin
                    // op:thread1/OP60
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_9 <= 16'd00000;
                  end
                3'd2: 
                  begin
                    // op:thread1/OP106
                    // at: dut.cc:62:4
                    // Call Stack: 
                    // in function thread1 called from dut.cc:62:4
                    s_reg_9 <= dut_N_Mux_16_2_3_4_57_out1;
                  end
              endcase
            end
        endcase
      end
    
    // rtl_process:dut/drive_dut_Add2i1u3_4_6_in1
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_dut_Add2i1u3_4_6_in1
    // at: dut.cc:59:34
    always @(gs_ctrl_thread1_h10 or s_reg_6_slice[2:0])
      begin : drive_dut_Add2i1u3_4_6_in1
        if (gs_ctrl_thread1_h10) 
          begin
            // op:thread1/OP128
            // at: dut.cc:59:36
            // Call Stack: 
            // in function thread1 called from dut.cc:59:36
            dut_Add2i1u3_4_6_in1 = s_reg_6_slice[2:0];
          end 
        else 
          begin
            // op:thread1/OP128
            // at: dut.cc:59:36
            // Call Stack: 
            // in function thread1 called from dut.cc:59:36
            dut_Add2i1u3_4_6_in1 = 3'd0;
          end
      end
    
    // rtl_instance:dut/dut_Add2i1u3_4_6
    // Resource=dut_Add2i1u3_4, Function=add : Inputs=3 Outputs=4
    // Implements 1 operation(s)
    // at: dut.cc:59:36
    assign dut_Add2i1u3_4_6_out1 = {1'b0, dut_Add2i1u3_4_6_in1} + 4'd01;
    
    // rtl_process:dut/drive_dut_Gti0s5_4_7_in1_slice
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_dut_Gti0s5_4_7_in1_slice
    // at: dut.cc:64:15
    always @(gs_ctrl_thread1_h8 or s_reg_15_slice)
      begin : drive_dut_Gti0s5_4_7_in1_slice
        if (gs_ctrl_thread1_h8) 
          begin
            // op:thread1/OP72
            // at: dut.cc:64:17
            // Call Stack: 
            // in function thread1 called from dut.cc:64:17
            dut_Gti0s5_4_7_in1_slice = s_reg_15_slice;
          end 
        else 
          begin
            // op:thread1/OP72
            // at: dut.cc:64:17
            // Call Stack: 
            // in function thread1 called from dut.cc:64:17
            dut_Gti0s5_4_7_in1_slice = 4'd00;
          end
      end
    
    // rtl_instance:dut/dut_Gti0s5_4_7
    // Resource=dut_Gti0s5_4, Function=gt : Inputs=5S Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_Gti0s5_4_7_out1 = {1'b0, dut_Gti0s5_4_7_in1_slice} > 5'd00;
    
    // rtl_process:dut/drive_dut_Eqi7u3_4_8_in1
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_dut_Eqi7u3_4_8_in1
    // at: dut.cc:65:7
    always @(gs_ctrl_thread1_h8 or s_reg_15_slice[2:0])
      begin : drive_dut_Eqi7u3_4_8_in1
        if (gs_ctrl_thread1_h8) 
          begin
            // op:thread1/OP78
            // at: dut.cc:65:7
            // Call Stack: 
            // in function thread1 called from dut.cc:65:7
            dut_Eqi7u3_4_8_in1 = s_reg_15_slice[2:0];
          end 
        else 
          begin
            // op:thread1/OP78
            // at: dut.cc:65:7
            // Call Stack: 
            // in function thread1 called from dut.cc:65:7
            dut_Eqi7u3_4_8_in1 = 3'd0;
          end
      end
    
    // rtl_instance:dut/dut_Eqi7u3_4_8
    // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:65:7
    assign dut_Eqi7u3_4_8_out1 = dut_Eqi7u3_4_8_in1 == 3'd7;
    
    // rtl_instance:dut/dut_Eqi6u3_4_9
    // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:65:7
    assign dut_Eqi6u3_4_9_out1 = dut_Eqi7u3_4_8_in1 == 3'd6;
    
    // rtl_instance:dut/dut_Eqi5u3_4_10
    // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:65:7
    assign dut_Eqi5u3_4_10_out1 = dut_Eqi7u3_4_8_in1 == 3'd5;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_11
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_11_out1 = dut_Eqi7u3_4_8_out1 & dut_Gti0s5_4_7_out1;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_12
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_12_out1 = dut_Eqi6u3_4_9_out1 & dut_Gti0s5_4_7_out1;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_13
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_13_out1 = dut_Eqi5u3_4_10_out1 & dut_Gti0s5_4_7_out1;
    
    // rtl_instance:dut/dut_OrReduction_3U_1U_4_14
    // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:65:7
    assign dut_OrReduction_3U_1U_4_14_out1 = (|s_reg_15_slice[2:0]);
    
    // rtl_instance:dut/dut_Eqi4u3_4_15
    // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 2 operation(s)
    // at: dut.cc:63:7
    // at: dut.cc:65:7
    assign dut_Eqi4u3_4_15_out1 = s_reg_16 == 3'd4;
    
    // rtl_instance:dut/dut_Eqi3u3_4_22
    // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 2 operation(s)
    // at: dut.cc:63:7
    // at: dut.cc:65:7
    assign dut_Eqi3u3_4_22_out1 = s_reg_16 == 3'd3;
    
    // rtl_instance:dut/dut_Eqi2u3_4_23
    // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 2 operation(s)
    // at: dut.cc:63:7
    // at: dut.cc:65:7
    assign dut_Eqi2u3_4_23_out1 = s_reg_16 == 3'd2;
    
    // rtl_instance:dut/dut_Eqi7u3_4_18
    // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    assign dut_Eqi7u3_4_18_out1 = s_reg_16 == 3'd7;
    
    // rtl_instance:dut/dut_Eqi6u3_4_19
    // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    assign dut_Eqi6u3_4_19_out1 = s_reg_16 == 3'd6;
    
    // rtl_instance:dut/dut_Eqi5u3_4_20
    // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    assign dut_Eqi5u3_4_20_out1 = s_reg_16 == 3'd5;
    
    // rtl_instance:dut/dut_Eqi1u3_4_24
    // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
    // Implements 2 operation(s)
    // at: dut.cc:63:7
    // at: dut.cc:65:7
    assign dut_Eqi1u3_4_24_out1 = s_reg_16 == 3'd1;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_25
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_25_out1 = dut_Eqi4u3_4_15_out1 & s_reg_17;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_26
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_26_out1 = dut_Eqi3u3_4_22_out1 & s_reg_17;
    
    // rtl_instance:dut/dut_Add2i1u3_4_27
    // Resource=dut_Add2i1u3_4, Function=add : Inputs=3 Outputs=4
    // Implements 1 operation(s)
    // at: dut.cc:60:38
    assign dut_Add2i1u3_4_27_out1 = {1'b0, s_reg_15_slice[2:0]} + 4'd01;
    
    // rtl_instance:dut/dut_Not_1U_1U_4_29
    // Resource=dut_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:65:7
    assign dut_Not_1U_1U_4_29_out1 = !s_reg_21;
    
    // rtl_instance:dut/dut_N_Mux_16_8_0_4_30
    // Resource=dut_N_Mux_16_8_0_4, Function=mux : Inputs=16,16,16,16,16,16,16,16,3 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:65:16
    always @(dout_data or s_reg_10 or s_reg_11 or s_reg_12 or s_reg_14 or s_reg_16 or s_reg_7 or s_reg_8 or s_reg_9)
      begin : dut_N_Mux_16_8_0_4_30
        case (s_reg_16) 
          3'd1: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_14;
            end
          3'd2: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_7;
            end
          3'd3: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_8;
            end
          3'd4: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_9;
            end
          3'd5: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_10;
            end
          3'd6: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_11;
            end
          3'd7: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = s_reg_12;
            end
          default: 
            begin
              dut_N_Mux_16_8_0_4_30_out1 = dout_data;
            end
        endcase
      end
    
    // rtl_instance:dut/dut_N_Mux_16_8_1_4_31
    // Resource=dut_N_Mux_16_8_1_4, Function=mux : Inputs=16,16,16,16,16,16,16,16,3 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:65:7
    always @(dout_data or s_reg_10 or s_reg_11 or s_reg_12 or s_reg_14 or s_reg_16 or s_reg_7 or s_reg_8 or s_reg_9)
      begin : dut_N_Mux_16_8_1_4_31
        case (s_reg_16) 
          3'd0: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_14;
            end
          3'd1: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_7;
            end
          3'd2: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_8;
            end
          3'd3: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_9;
            end
          3'd4: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_10;
            end
          3'd5: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_11;
            end
          3'd6: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = s_reg_12;
            end
          default: 
            begin
              dut_N_Mux_16_8_1_4_31_out1 = dout_data;
            end
        endcase
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_32
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(dout_data or s_reg_23)
      begin : dut_N_Mux_16_2_2_4_32
        if (s_reg_23) 
          begin
            dut_N_Mux_16_2_2_4_32_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_32_out1 = dout_data;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_33
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_12 or s_reg_24)
      begin : dut_N_Mux_16_2_2_4_33
        if (s_reg_24) 
          begin
            dut_N_Mux_16_2_2_4_33_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_33_out1 = s_reg_12;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_34
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_11 or s_reg_25)
      begin : dut_N_Mux_16_2_2_4_34
        if (s_reg_25) 
          begin
            dut_N_Mux_16_2_2_4_34_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_34_out1 = s_reg_11;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_35
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_10 or s_reg_26)
      begin : dut_N_Mux_16_2_2_4_35
        if (s_reg_26) 
          begin
            dut_N_Mux_16_2_2_4_35_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_35_out1 = s_reg_10;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_36
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_27 or s_reg_9)
      begin : dut_N_Mux_16_2_2_4_36
        if (s_reg_27) 
          begin
            dut_N_Mux_16_2_2_4_36_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_36_out1 = s_reg_9;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_37
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_22 or s_reg_8)
      begin : dut_N_Mux_16_2_2_4_37
        if (s_reg_22) 
          begin
            dut_N_Mux_16_2_2_4_37_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_37_out1 = s_reg_8;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_2_4_38
    // Resource=dut_N_Mux_16_2_2_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_29 or s_reg_7)
      begin : dut_N_Mux_16_2_2_4_38
        if (s_reg_29) 
          begin
            dut_N_Mux_16_2_2_4_38_out1 = 16'd00000;
          end 
        else 
          begin
            dut_N_Mux_16_2_2_4_38_out1 = s_reg_7;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_4_4_39
    // Resource=dut_N_Mux_16_2_4_4, Function=mux : Inputs=16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:63:7
    always @(s_reg_14 or s_reg_21)
      begin : dut_N_Mux_16_2_4_4_39
        if (s_reg_21) 
          begin
            dut_N_Mux_16_2_4_4_39_out1 = s_reg_14;
          end 
        else 
          begin
            dut_N_Mux_16_2_4_4_39_out1 = 16'd00000;
          end
      end
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_40
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_40_out1 = s_reg_22 & s_reg_17;
    
    // rtl_process:dut/drive_dut_Lti8s5_1_41_in1
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_dut_Lti8s5_1_41_in1
    // at: dut.cc:60:20
    assign dut_Lti8s5_1_41_in1 = {1'b0, s_reg_15_slice};
    
    // rtl_instance:dut/dut_Lti8s5_1_41
    // Resource=dut_Lti8s5_1, Function=lt : Inputs=5S Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:60:22
    assign dut_Lti8s5_1_41_out1 = dut_Lti8s5_1_41_in1[4] ^ dut_Lti8s5_1_41_in1 < 5'd08;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_42
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_42_out1 = dut_Eqi1u3_4_24_out1 & s_reg_17;
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_43
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:64:17
    assign dut_And_1Ux1U_1U_4_43_out1 = dut_Not_1U_1U_4_29_out1 & s_reg_17;
    
    // rtl_instance:dut/dut_Add_16Ux16U_16U_4_44
    // Resource=dut_Add_16Ux16U_16U_4, Function=add : Inputs=16,16 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:65:11
    assign dut_Add_16Ux16U_16U_4_44_out1 = dut_N_Mux_16_8_1_4_31_out1 + dut_N_Mux_16_8_0_4_30_out1;
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_45
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(dout_data or s_reg_18 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_45
        if (s_reg_18) 
          begin
            dut_N_Mux_16_2_3_4_45_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_45_out1 = dout_data;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_46
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_32_out1 or dut_N_Mux_16_2_3_4_45_out1)
      begin : dut_N_Mux_16_2_3_4_46
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_46_out1 = dut_N_Mux_16_2_2_4_32_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_46_out1 = dut_N_Mux_16_2_3_4_45_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_47
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_12 or s_reg_19 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_47
        if (s_reg_19) 
          begin
            dut_N_Mux_16_2_3_4_47_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_47_out1 = s_reg_12;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_48
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_11 or s_reg_20 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_48
        if (s_reg_20) 
          begin
            dut_N_Mux_16_2_3_4_48_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_48_out1 = s_reg_11;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_49
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_10 or s_reg_23 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_49
        if (s_reg_23) 
          begin
            dut_N_Mux_16_2_3_4_49_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_49_out1 = s_reg_10;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_50
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_24 or s_reg_9 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_50
        if (s_reg_24) 
          begin
            dut_N_Mux_16_2_3_4_50_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_50_out1 = s_reg_9;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_51
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_8 or dut_And_1Ux1U_1U_4_40_out1 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_51
        if (dut_And_1Ux1U_1U_4_40_out1) 
          begin
            dut_N_Mux_16_2_3_4_51_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_51_out1 = s_reg_8;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_52
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_7 or dut_And_1Ux1U_1U_4_42_out1 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_52
        if (dut_And_1Ux1U_1U_4_42_out1) 
          begin
            dut_N_Mux_16_2_3_4_52_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_52_out1 = s_reg_7;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_53
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:64:11
    always @(s_reg_14 or dut_And_1Ux1U_1U_4_43_out1 or dut_Add_16Ux16U_16U_4_44_out1)
      begin : dut_N_Mux_16_2_3_4_53
        if (dut_And_1Ux1U_1U_4_43_out1) 
          begin
            dut_N_Mux_16_2_3_4_53_out1 = dut_Add_16Ux16U_16U_4_44_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_53_out1 = s_reg_14;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_54
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_33_out1 or dut_N_Mux_16_2_3_4_47_out1)
      begin : dut_N_Mux_16_2_3_4_54
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_54_out1 = dut_N_Mux_16_2_2_4_33_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_54_out1 = dut_N_Mux_16_2_3_4_47_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_55
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_34_out1 or dut_N_Mux_16_2_3_4_48_out1)
      begin : dut_N_Mux_16_2_3_4_55
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_55_out1 = dut_N_Mux_16_2_2_4_34_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_55_out1 = dut_N_Mux_16_2_3_4_48_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_56
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_35_out1 or dut_N_Mux_16_2_3_4_49_out1)
      begin : dut_N_Mux_16_2_3_4_56
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_56_out1 = dut_N_Mux_16_2_2_4_35_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_56_out1 = dut_N_Mux_16_2_3_4_49_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_57
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_36_out1 or dut_N_Mux_16_2_3_4_50_out1)
      begin : dut_N_Mux_16_2_3_4_57
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_57_out1 = dut_N_Mux_16_2_2_4_36_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_57_out1 = dut_N_Mux_16_2_3_4_50_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_58
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_37_out1 or dut_N_Mux_16_2_3_4_51_out1)
      begin : dut_N_Mux_16_2_3_4_58
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_58_out1 = dut_N_Mux_16_2_2_4_37_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_58_out1 = dut_N_Mux_16_2_3_4_51_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_59
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_2_4_38_out1 or dut_N_Mux_16_2_3_4_52_out1)
      begin : dut_N_Mux_16_2_3_4_59
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_59_out1 = dut_N_Mux_16_2_2_4_38_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_59_out1 = dut_N_Mux_16_2_3_4_52_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Mux_16_2_3_4_60
    // Resource=dut_N_Mux_16_2_3_4, Function=mux : Inputs=16,16,1 Outputs=16
    // Implements 1 operation(s)
    // at: dut.cc:62:4
    always @(s_reg_33 or dut_N_Mux_16_2_4_4_39_out1 or dut_N_Mux_16_2_3_4_53_out1)
      begin : dut_N_Mux_16_2_3_4_60
        if (s_reg_33) 
          begin
            dut_N_Mux_16_2_3_4_60_out1 = dut_N_Mux_16_2_4_4_39_out1;
          end 
        else 
          begin
            dut_N_Mux_16_2_3_4_60_out1 = dut_N_Mux_16_2_3_4_53_out1;
          end
      end
    
    // rtl_process:dut/drive_dut_Lti8s5_1_61_in1
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_dut_Lti8s5_1_61_in1
    // at: dut.cc:59:19
    assign dut_Lti8s5_1_61_in1 = {1'b0, s_reg_6_slice};
    
    // rtl_instance:dut/dut_Lti8s5_1_61
    // Resource=dut_Lti8s5_1, Function=lt : Inputs=5S Outputs=1
    // Implements 1 operation(s)
    // at: dut.cc:59:21
    assign dut_Lti8s5_1_61_out1 = dut_Lti8s5_1_61_in1[4] ^ dut_Lti8s5_1_61_in1 < 5'd08;
    
    // rtl_process:dut/drive_global_state
    // FSM Control Mux
    // FSM Control for thread behavior:thread1
    // BB3 : PROTO_1
    //   SRCLOC: dut.cc:37:3
    //    FSM: global_state == 0
    // BB10 : PROTO_2
    //   SRCLOC: cynw_p2p.h:1461:11
    //    FSM: global_state == 1
    // BB12 : SCHED_5
    //    FSM: global_state == 2
    // BB13 : SCHED_6
    //    FSM: global_state == 3
    // BB15 : SCHED_8
    //    FSM: global_state == 4
    // BB18 : PROTO_3
    //   SRCLOC: cynw_p2p.h:5092:4
    //    FSM: global_state == 5
    
    always @(posedge clk)
      begin : drive_global_state
        if (rst == 1'b0) 
          begin
            // basic_block:din_gen_busy/BB3
            global_state <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // rtl_process:dut/drive_global_state_next
    // FSM Control Mux
    // FSM Control for thread behavior:thread1
    always @(dut_Lti8s5_1_41_out1 or dut_Lti8s5_1_61_out1 or global_state)
      begin : drive_global_state_next
        case (global_state) 
          3'd0, 3'd3, 3'd4, 3'd5: 
            begin
              // basic_block:thread1/BB10
              global_state_next = 3'd1;
            end
          3'd2: 
            begin
              if (dut_Lti8s5_1_41_out1) 
                begin
                  global_state_next = global_state + 3'd1;
                end 
              else 
                begin
                  if (dut_Lti8s5_1_61_out1) 
                    begin
                      // basic_block:thread1/BB15
                      global_state_next = 3'd4;
                    end 
                  else 
                    begin
                      // basic_block:thread1/BB18
                      global_state_next = 3'd5;
                    end
                end
            end
          default: 
            begin
              global_state_next = global_state + 3'd1;
            end
        endcase
      end
    
    // rtl_process:dut/drive_gs_ctrl_thread1_h10
    // FSM Control Mux
    // FSM Control for thread behavior:thread1
    
    always @(posedge clk)
      begin : drive_gs_ctrl_thread1_h10
        if (rst == 1'b0) 
          begin
            gs_ctrl_thread1_h10 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    3'd4: 
                      begin
                        gs_ctrl_thread1_h10 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_thread1_h10 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:dut/drive_gs_ctrl_thread1_h8
    // FSM Control Mux
    // FSM Control for thread behavior:thread1
    
    always @(posedge clk)
      begin : drive_gs_ctrl_thread1_h8
        if (rst == 1'b0) 
          begin
            gs_ctrl_thread1_h8 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    3'd3: 
                      begin
                        gs_ctrl_thread1_h8 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_thread1_h8 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:dut/drive_din_busy
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_din_busy
    // at: cynw_p2p.h:1766:13
    assign din_busy = dut_gen_busy_r_4_64_out1[2];
    
    // rtl_instance:dut/dut_gen_busy_r_4_64 (4 concurrent statements)
    // Resource=dut_gen_busy_r_4, Function=not not and and or : Inputs=1,1,1 Outputs=3
    // Implements 1 operation(s)
    // at: cynw_p2p.h:1734:8
      assign dut_gen_busy_r_4_64_out1 = {dut_gen_busy_r_4_64_gnew_req, {dut_gen_busy_r_4_64_gdiv, dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next}};
      assign dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next = ~dut_gen_busy_r_4_64_gdiv;
      assign dut_gen_busy_r_4_64_gdiv = din_vld & !dut_gen_busy_r_4_64_gnew_req;
      assign dut_gen_busy_r_4_64_gnew_req = din_m_busy_req_0 & (din_m_unvalidated_req | din_vld);
    // (end of dut_gen_busy_r_4_64)
    
    // rtl_process:dut/drive_din_m_unvalidated_req
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_din_m_unvalidated_req
    // at: cynw_p2p.h:1797:2
    // at: cynw_p2p.h:1791:10
    // at: cynw_p2p.h:1802:13
    // at: cynw_p2p.h:1756:36
    
    always @(posedge clk)
      begin : drive_din_m_unvalidated_req
        if (rst == 1'b0) 
          begin
            // op:din_gen_unvalidated_req/OP19
            // at: cynw_p2p.h:1797:2
            // Call Stack: 
            // in function gen_unvalidated_req called from cynw_p2p.h:1797:2
            din_m_unvalidated_req <= 1'd1;
          end 
        else 
          begin
            // op:din_gen_unvalidated_req/OP25
            // at: cynw_p2p.h:1802:13
            // Call Stack: 
            // in function gen_unvalidated_req called from cynw_p2p.h:1802:13
            din_m_unvalidated_req <= dut_N_Muxb_1_2_5_4_4_out1;
          end
      end
    
    // rtl_instance:dut/dut_N_Muxb_1_2_5_4_4
    // Resource=dut_N_Muxb_1_2_5_4, Function=mux : Inputs=1,1,1 Outputs=1
    // Implements 1 operation(s)
    // at: cynw_p2p.h:1801:11
    always @(din_vld or din_m_busy_req_0 or din_m_unvalidated_req)
      begin : dut_N_Muxb_1_2_5_4_4
        if (din_m_busy_req_0) 
          begin
            dut_N_Muxb_1_2_5_4_4_out1 = din_m_unvalidated_req;
          end 
        else 
          begin
            dut_N_Muxb_1_2_5_4_4_out1 = din_vld;
          end
      end
    
    // rtl_process:dut/drive_dout_vld
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_dout_vld
    // at: cynw_p2p.h:5180:18
    assign dout_vld = dut_Or_1Ux1U_1U_4_2_out1;
    
    // rtl_instance:dut/dut_Or_1Ux1U_1U_4_2
    // Resource=dut_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: cynw_p2p.h:5180:50
    assign dut_Or_1Ux1U_1U_4_2_out1 = dout_m_unacked_req | dut_Xor_1Ux1U_1U_1_1_out1;
    
    // rtl_process:dut/drive_dout_m_unacked_req
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_dout_m_unacked_req
    // at: cynw_p2p.h:5180:29
    // at: cynw_p2p.h:5192:9
    // at: cynw_p2p.h:5195:9
    
    always @(posedge clk)
      begin : drive_dout_m_unacked_req
        if (rst == 1'b0) 
          begin
            // op:dout_gen_unacked_req/OP333
            // at: cynw_p2p.h:5192:9
            // Call Stack: 
            // in function gen_unacked_req called from cynw_p2p.h:5192:9
            dout_m_unacked_req <= 1'd0;
          end 
        else 
          begin
            // op:dout_gen_unacked_req/OP335
            // at: cynw_p2p.h:5195:9
            // Call Stack: 
            // in function gen_unacked_req called from cynw_p2p.h:5195:9
            dout_m_unacked_req <= dut_And_1Ux1U_1U_4_62_out1;
          end
      end
    
    // rtl_instance:dut/dut_And_1Ux1U_1U_4_62
    // Resource=dut_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: cynw_p2p.h:5207:43
    assign dut_And_1Ux1U_1U_4_62_out1 = dout_busy & dout_vld;
    
    // rtl_instance:dut/dut_Xor_1Ux1U_1U_1_1
    // Resource=dut_Xor_1Ux1U_1U_1, Function=xor : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: cynw_comm_util.h:1431:70
    assign dut_Xor_1Ux1U_1U_1_1_out1 = dout_m_req_m_trig_req ^ dout_m_req_m_prev_trig_req;
    
    // rtl_process:dut/drive_dout_m_req_m_prev_trig_req
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_dout_m_req_m_prev_trig_req
    // at: cynw_comm_util.h:1444:9
    // at: cynw_comm_util.h:1447:9
    // at: cynw_comm_util.h:1431:73
    
    always @(posedge clk)
      begin : drive_dout_m_req_m_prev_trig_req
        if (rst == 1'b0) 
          begin
            // op:dout_m_req_gen_prev_trig_reg/OP0
            // at: cynw_comm_util.h:1444:9
            // Call Stack: 
            // in function gen_prev_trig_reg called from cynw_comm_util.h:1444:9
            dout_m_req_m_prev_trig_req <= 1'd0;
          end 
        else 
          begin
            // op:dout_m_req_gen_prev_trig_reg/OP2
            // at: cynw_comm_util.h:1447:9
            // Call Stack: 
            // in function gen_prev_trig_reg called from cynw_comm_util.h:1447:9
            dout_m_req_m_prev_trig_req <= dout_m_req_m_trig_req;
          end
      end
    
    // rtl_instance:dut/dut_Not_1U_1U_1_3
    // Resource=dut_Not_1U_1U_1, Function=not : Inputs=1 Outputs=1
    // Implements 1 operation(s)
    // at: cynw_comm_util.h:1472:25
    assign dut_Not_1U_1U_1_3_out1 = !dout_m_req_m_trig_req;

endmodule


