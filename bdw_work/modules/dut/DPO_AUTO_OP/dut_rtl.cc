// Generated by stratus_hls 21.20-p100  (96289.240513)
// Fri May 26 15:14:56 2023
// from dut.cc
#include "dut_rtl.h"

struct dut;
dut::dut(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rst("rst")
    ,din_busy("din_busy")
    ,din_vld("din_vld")
    ,din_data("din_data")
    ,dout_busy("dout_busy")
    ,dout_vld("dout_vld")
    ,dout_data("dout_data")
    ,dout_m_req_m_prev_trig_req("dout_m_req_m_prev_trig_req")
    ,dut_Xor_1Ux1U_1U_1_1_out1("dut_Xor_1Ux1U_1U_1_1_out1")
    ,dout_m_unacked_req("dout_m_unacked_req")
    ,dut_Or_1Ux1U_1U_4_2_out1("dut_Or_1Ux1U_1U_4_2_out1")
    ,dut_N_Muxb_1_2_16_4_4_out1("dut_N_Muxb_1_2_16_4_4_out1")
    ,din_m_unvalidated_req("din_m_unvalidated_req")
    ,dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next("dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next")
    ,dut_gen_busy_r_4_64_gdiv("dut_gen_busy_r_4_64_gdiv")
    ,dut_gen_busy_r_4_64_gnew_req("dut_gen_busy_r_4_64_gnew_req")
    ,global_state_next("global_state_next")
    ,dut_LessThan_1U_17_1_61_in1("dut_LessThan_1U_17_1_61_in1")
    ,dut_N_Mux_16_2_25_4_53_out1("dut_N_Mux_16_2_25_4_53_out1")
    ,dut_N_Mux_16_2_25_4_52_out1("dut_N_Mux_16_2_25_4_52_out1")
    ,dut_N_Mux_16_2_25_4_51_out1("dut_N_Mux_16_2_25_4_51_out1")
    ,dut_N_Mux_16_2_25_4_50_out1("dut_N_Mux_16_2_25_4_50_out1")
    ,dut_N_Mux_16_2_25_4_49_out1("dut_N_Mux_16_2_25_4_49_out1")
    ,dut_N_Mux_16_2_25_4_48_out1("dut_N_Mux_16_2_25_4_48_out1")
    ,dut_N_Mux_16_2_25_4_47_out1("dut_N_Mux_16_2_25_4_47_out1")
    ,dut_N_Mux_16_2_25_4_45_out1("dut_N_Mux_16_2_25_4_45_out1")
    ,dut_Add_16Ux16U_16U_4_44_out1("dut_Add_16Ux16U_16U_4_44_out1")
    ,dut_And_1Ux1U_1U_4_43_out1("dut_And_1Ux1U_1U_4_43_out1")
    ,dut_And_1Ux1U_1U_4_42_out1("dut_And_1Ux1U_1U_4_42_out1")
    ,dut_LessThan_1U_17_1_41_in1("dut_LessThan_1U_17_1_41_in1")
    ,dut_And_1Ux1U_1U_4_40_out1("dut_And_1Ux1U_1U_4_40_out1")
    ,dut_N_Mux_16_2_26_4_39_out1("dut_N_Mux_16_2_26_4_39_out1")
    ,dut_N_Mux_16_2_24_4_38_out1("dut_N_Mux_16_2_24_4_38_out1")
    ,dut_N_Mux_16_2_24_4_37_out1("dut_N_Mux_16_2_24_4_37_out1")
    ,dut_N_Mux_16_2_24_4_36_out1("dut_N_Mux_16_2_24_4_36_out1")
    ,dut_N_Mux_16_2_24_4_35_out1("dut_N_Mux_16_2_24_4_35_out1")
    ,dut_N_Mux_16_2_24_4_34_out1("dut_N_Mux_16_2_24_4_34_out1")
    ,dut_N_Mux_16_2_24_4_33_out1("dut_N_Mux_16_2_24_4_33_out1")
    ,dut_N_Mux_16_2_24_4_32_out1("dut_N_Mux_16_2_24_4_32_out1")
    ,dut_N_Mux_16_8_23_4_31_out1("dut_N_Mux_16_8_23_4_31_out1")
    ,dut_N_Mux_16_8_22_4_30_out1("dut_N_Mux_16_8_22_4_30_out1")
    ,dut_Not_1U_1U_4_29_out1("dut_Not_1U_1U_4_29_out1")
    ,dut_Equal_1U_12_4_10_out1("dut_Equal_1U_12_4_10_out1")
    ,dut_Equal_1U_13_4_9_out1("dut_Equal_1U_13_4_9_out1")
    ,dut_Equal_1U_14_4_8_out1("dut_Equal_1U_14_4_8_out1")
    ,dut_Equal_1U_14_4_8_in1("dut_Equal_1U_14_4_8_in1")
    ,dut_GreaterThan_1U_15_4_7_in1_slice("dut_GreaterThan_1U_15_4_7_in1_slice")
    ,gs_ctrl_thread1_h8("gs_ctrl_thread1_h8")
    ,dut_Add_4U_6_4_6_in1("dut_Add_4U_6_4_6_in1")
    ,gs_ctrl_thread1_h10("gs_ctrl_thread1_h10")
    ,dut_N_Mux_16_2_25_4_57_out1("dut_N_Mux_16_2_25_4_57_out1")
    ,s_reg_9("s_reg_9")
    ,dut_N_Mux_16_2_25_4_58_out1("dut_N_Mux_16_2_25_4_58_out1")
    ,s_reg_8("s_reg_8")
    ,dut_N_Mux_16_2_25_4_59_out1("dut_N_Mux_16_2_25_4_59_out1")
    ,s_reg_7("s_reg_7")
    ,dut_Add_4U_6_4_6_out1("dut_Add_4U_6_4_6_out1")
    ,s_reg_6_slice("s_reg_6_slice")
    ,s_reg_33("s_reg_33")
    ,dut_Equal_1U_5_4_24_out1("dut_Equal_1U_5_4_24_out1")
    ,s_reg_29("s_reg_29")
    ,dut_Equal_1U_10_4_22_out1("dut_Equal_1U_10_4_22_out1")
    ,s_reg_27("s_reg_27")
    ,dut_Equal_1U_11_4_15_out1("dut_Equal_1U_11_4_15_out1")
    ,s_reg_26("s_reg_26")
    ,dut_Equal_1U_12_4_20_out1("dut_Equal_1U_12_4_20_out1")
    ,s_reg_25("s_reg_25")
    ,dut_Equal_1U_13_4_19_out1("dut_Equal_1U_13_4_19_out1")
    ,dut_And_1Ux1U_1U_4_26_out1("dut_And_1Ux1U_1U_4_26_out1")
    ,s_reg_24("s_reg_24")
    ,dut_Equal_1U_14_4_18_out1("dut_Equal_1U_14_4_18_out1")
    ,dut_And_1Ux1U_1U_4_25_out1("dut_And_1Ux1U_1U_4_25_out1")
    ,s_reg_23("s_reg_23")
    ,dut_Equal_1U_8_4_23_out1("dut_Equal_1U_8_4_23_out1")
    ,s_reg_22("s_reg_22")
    ,dut_OrReduction_3U_1U_4_14_out1("dut_OrReduction_3U_1U_4_14_out1")
    ,s_reg_21("s_reg_21")
    ,dut_And_1Ux1U_1U_4_13_out1("dut_And_1Ux1U_1U_4_13_out1")
    ,s_reg_20("s_reg_20")
    ,dut_And_1Ux1U_1U_4_12_out1("dut_And_1Ux1U_1U_4_12_out1")
    ,s_reg_19("s_reg_19")
    ,dut_And_1Ux1U_1U_4_11_out1("dut_And_1Ux1U_1U_4_11_out1")
    ,s_reg_18("s_reg_18")
    ,dut_GreaterThan_1U_15_4_7_out1("dut_GreaterThan_1U_15_4_7_out1")
    ,s_reg_17("s_reg_17")
    ,s_reg_16("s_reg_16")
    ,dut_Add_4U_6_4_27_out1("dut_Add_4U_6_4_27_out1")
    ,s_reg_15_slice("s_reg_15_slice")
    ,dut_N_Mux_16_2_25_4_60_out1("dut_N_Mux_16_2_25_4_60_out1")
    ,s_reg_14("s_reg_14")
    ,dut_N_Mux_16_2_25_4_54_out1("dut_N_Mux_16_2_25_4_54_out1")
    ,s_reg_12("s_reg_12")
    ,dut_N_Mux_16_2_25_4_55_out1("dut_N_Mux_16_2_25_4_55_out1")
    ,s_reg_11("s_reg_11")
    ,dut_N_Mux_16_2_25_4_56_out1("dut_N_Mux_16_2_25_4_56_out1")
    ,s_reg_10("s_reg_10")
    ,dut_gen_busy_r_4_64_out1("dut_gen_busy_r_4_64_out1")
    ,dut_And_1Ux1U_1U_4_62_out1("dut_And_1Ux1U_1U_4_62_out1")
    ,dut_Not_1U_1U_1_3_out1("dut_Not_1U_1U_1_3_out1")
    ,dut_LessThan_1U_17_1_41_out1("dut_LessThan_1U_17_1_41_out1")
    ,dut_LessThan_1U_17_1_61_out1("dut_LessThan_1U_17_1_61_out1")
    ,dout_m_req_m_trig_req("dout_m_req_m_trig_req")
    ,din_m_busy_req_0("din_m_busy_req_0")
    ,dut_N_Mux_16_2_25_4_46_out1("dut_N_Mux_16_2_25_4_46_out1")
    ,global_state("global_state")
    ,stall0("stall0")
{
  SC_METHOD(drive_dout_data);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_m_busy_req_0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_dout_m_req_m_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( dut_gen_busy_r_4_64_out1 );
  sensitive << ( dut_And_1Ux1U_1U_4_62_out1 );

  SC_METHOD(drive_s_reg_10);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_11);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_14);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_15_slice);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_16);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_17);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_18);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_19);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_20);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_21);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_22);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_23);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_27);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6_slice);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_7);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_8);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_dut_Add_4U_6_4_6_in1);
  sensitive << ( gs_ctrl_thread1_h10 );
  sensitive << ( s_reg_6_slice );

  SC_METHOD(dut_Add_4U_6_4_6);
  sensitive << ( dut_Add_4U_6_4_6_in1 );

  SC_METHOD(drive_dut_GreaterThan_1U_15_4_7_in1_slice);
  sensitive << ( gs_ctrl_thread1_h8 );
  sensitive << ( s_reg_15_slice );

  SC_METHOD(dut_GreaterThan_1U_15_4_7);
  sensitive << ( dut_GreaterThan_1U_15_4_7_in1_slice );

  SC_METHOD(drive_dut_Equal_1U_14_4_8_in1);
  sensitive << ( gs_ctrl_thread1_h8 );
  sensitive << ( s_reg_15_slice );

  SC_METHOD(dut_Equal_1U_14_4_8);
  sensitive << ( dut_Equal_1U_14_4_8_in1 );

  SC_METHOD(dut_Equal_1U_13_4_9);
  sensitive << ( dut_Equal_1U_14_4_8_in1 );

  SC_METHOD(dut_Equal_1U_12_4_10);
  sensitive << ( dut_Equal_1U_14_4_8_in1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_11);
  sensitive << ( dut_GreaterThan_1U_15_4_7_out1 );
  sensitive << ( dut_Equal_1U_14_4_8_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_12);
  sensitive << ( dut_GreaterThan_1U_15_4_7_out1 );
  sensitive << ( dut_Equal_1U_13_4_9_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_13);
  sensitive << ( dut_GreaterThan_1U_15_4_7_out1 );
  sensitive << ( dut_Equal_1U_12_4_10_out1 );

  SC_METHOD(dut_OrReduction_3U_1U_4_14);
  sensitive << ( s_reg_15_slice );

  SC_METHOD(dut_Equal_1U_11_4_15);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_Equal_1U_10_4_22);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_Equal_1U_8_4_23);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_Equal_1U_14_4_18);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_Equal_1U_13_4_19);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_Equal_1U_12_4_20);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_Equal_1U_5_4_24);
  sensitive << ( s_reg_16 );

  SC_METHOD(dut_And_1Ux1U_1U_4_25);
  sensitive << ( s_reg_17 );
  sensitive << ( dut_Equal_1U_11_4_15_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_26);
  sensitive << ( s_reg_17 );
  sensitive << ( dut_Equal_1U_10_4_22_out1 );

  SC_METHOD(dut_Add_4U_6_4_27);
  sensitive << ( s_reg_15_slice );

  SC_METHOD(dut_Not_1U_1U_4_29);
  sensitive << ( s_reg_21 );

  SC_METHOD(dut_N_Mux_16_8_22_4_30);
  sensitive << ( s_reg_16 );
  sensitive << ( dout_data );
  sensitive << ( s_reg_14 );
  sensitive << ( s_reg_7 );
  sensitive << ( s_reg_8 );
  sensitive << ( s_reg_9 );
  sensitive << ( s_reg_10 );
  sensitive << ( s_reg_11 );
  sensitive << ( s_reg_12 );

  SC_METHOD(dut_N_Mux_16_8_23_4_31);
  sensitive << ( s_reg_16 );
  sensitive << ( dout_data );
  sensitive << ( s_reg_14 );
  sensitive << ( s_reg_7 );
  sensitive << ( s_reg_8 );
  sensitive << ( s_reg_9 );
  sensitive << ( s_reg_10 );
  sensitive << ( s_reg_11 );
  sensitive << ( s_reg_12 );

  SC_METHOD(dut_N_Mux_16_2_24_4_32);
  sensitive << ( s_reg_23 );
  sensitive << ( dout_data );

  SC_METHOD(dut_N_Mux_16_2_24_4_33);
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_12 );

  SC_METHOD(dut_N_Mux_16_2_24_4_34);
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_11 );

  SC_METHOD(dut_N_Mux_16_2_24_4_35);
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_10 );

  SC_METHOD(dut_N_Mux_16_2_24_4_36);
  sensitive << ( s_reg_27 );
  sensitive << ( s_reg_9 );

  SC_METHOD(dut_N_Mux_16_2_24_4_37);
  sensitive << ( s_reg_22 );
  sensitive << ( s_reg_8 );

  SC_METHOD(dut_N_Mux_16_2_24_4_38);
  sensitive << ( s_reg_29 );
  sensitive << ( s_reg_7 );

  SC_METHOD(dut_N_Mux_16_2_26_4_39);
  sensitive << ( s_reg_21 );
  sensitive << ( s_reg_14 );

  SC_METHOD(dut_And_1Ux1U_1U_4_40);
  sensitive << ( s_reg_17 );
  sensitive << ( s_reg_22 );

  SC_METHOD(drive_dut_LessThan_1U_17_1_41_in1);
  sensitive << ( s_reg_15_slice );

  SC_METHOD(dut_LessThan_1U_17_1_41);
  sensitive << ( dut_LessThan_1U_17_1_41_in1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_42);
  sensitive << ( s_reg_17 );
  sensitive << ( dut_Equal_1U_5_4_24_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_43);
  sensitive << ( s_reg_17 );
  sensitive << ( dut_Not_1U_1U_4_29_out1 );

  SC_METHOD(dut_Add_16Ux16U_16U_4_44);
  sensitive << ( dut_N_Mux_16_8_22_4_30_out1 );
  sensitive << ( dut_N_Mux_16_8_23_4_31_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_45);
  sensitive << ( s_reg_18 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( dout_data );

  SC_METHOD(dut_N_Mux_16_2_25_4_46);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_32_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_45_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_47);
  sensitive << ( s_reg_19 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_12 );

  SC_METHOD(dut_N_Mux_16_2_25_4_48);
  sensitive << ( s_reg_20 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_11 );

  SC_METHOD(dut_N_Mux_16_2_25_4_49);
  sensitive << ( s_reg_23 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_10 );

  SC_METHOD(dut_N_Mux_16_2_25_4_50);
  sensitive << ( s_reg_24 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_9 );

  SC_METHOD(dut_N_Mux_16_2_25_4_51);
  sensitive << ( dut_And_1Ux1U_1U_4_40_out1 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_8 );

  SC_METHOD(dut_N_Mux_16_2_25_4_52);
  sensitive << ( dut_And_1Ux1U_1U_4_42_out1 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_7 );

  SC_METHOD(dut_N_Mux_16_2_25_4_53);
  sensitive << ( dut_And_1Ux1U_1U_4_43_out1 );
  sensitive << ( dut_Add_16Ux16U_16U_4_44_out1 );
  sensitive << ( s_reg_14 );

  SC_METHOD(dut_N_Mux_16_2_25_4_54);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_33_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_47_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_55);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_34_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_48_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_56);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_35_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_49_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_57);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_36_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_50_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_58);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_37_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_51_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_59);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_24_4_38_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_52_out1 );

  SC_METHOD(dut_N_Mux_16_2_25_4_60);
  sensitive << ( s_reg_33 );
  sensitive << ( dut_N_Mux_16_2_26_4_39_out1 );
  sensitive << ( dut_N_Mux_16_2_25_4_53_out1 );

  SC_METHOD(drive_dut_LessThan_1U_17_1_61_in1);
  sensitive << ( s_reg_6_slice );

  SC_METHOD(dut_LessThan_1U_17_1_61);
  sensitive << ( dut_LessThan_1U_17_1_61_in1 );

  SC_METHOD(drive_global_state);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( dut_LessThan_1U_17_1_41_out1 );
  sensitive << ( dut_LessThan_1U_17_1_61_out1 );

  SC_METHOD(drive_gs_ctrl_thread1_h10);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_thread1_h8);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_busy);
  sensitive << ( dut_gen_busy_r_4_64_out1 );

  SC_METHOD(dut_gen_busy_r_4_64_p7);
  sensitive << ( dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next );
  sensitive << ( dut_gen_busy_r_4_64_gdiv );
  sensitive << ( dut_gen_busy_r_4_64_gnew_req );

  SC_METHOD(dut_gen_busy_r_4_64_p6);
  sensitive << ( dut_gen_busy_r_4_64_gdiv );

  SC_METHOD(dut_gen_busy_r_4_64_p5);
  sensitive << ( dut_gen_busy_r_4_64_gnew_req );
  sensitive << ( din_vld );

  SC_METHOD(dut_gen_busy_r_4_64_p4);
  sensitive << ( din_vld );
  sensitive << ( din_m_unvalidated_req );
  sensitive << ( din_m_busy_req_0 );

  SC_METHOD(drive_din_m_unvalidated_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_N_Muxb_1_2_16_4_4);
  sensitive << ( din_m_busy_req_0 );
  sensitive << ( din_m_unvalidated_req );
  sensitive << ( din_vld );

  SC_METHOD(drive_dout_vld);
  sensitive << ( dut_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_2);
  sensitive << ( dut_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( dout_m_unacked_req );

  SC_METHOD(drive_dout_m_unacked_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_And_1Ux1U_1U_4_62);
  sensitive << ( dout_vld );
  sensitive << ( dout_busy );

  SC_METHOD(dut_Xor_1Ux1U_1U_1_1);
  sensitive << ( dout_m_req_m_prev_trig_req );
  sensitive << ( dout_m_req_m_trig_req );

  SC_METHOD(drive_dout_m_req_m_prev_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_Not_1U_1U_1_3);
  sensitive << ( dout_m_req_m_trig_req );

}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_dout_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      dout_data = 0ULL;
      break;
    case 2ULL: 
      dout_data = dut_N_Mux_16_2_25_4_46_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void dut::drive_din_m_busy_req_0(){
  if ( (rst.read() == 0ULL) ) {
    din_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<3>)(global_state.read()) ) {
      case 0ULL: case 3ULL: case 4ULL: case 5ULL: 
        din_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        din_m_busy_req_0 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void dut::drive_dout_m_req_m_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<3>)(global_state.read()) ) {
      case 2ULL: 
        if ( !( (dut_LessThan_1U_17_1_41_out1.read()||
             dut_LessThan_1U_17_1_61_out1.read()) ) ) {
          dout_m_req_m_trig_req = (sc_uint<1> ) (dut_Not_1U_1U_1_3_out1.read());
        } 
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void dut::drive_stall0(){
  switch( (sc_uint<3>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = (sc_uint<1> )dut_gen_busy_r_4_64_out1.read();
    break;
  case 5ULL: 
    stall0 = dut_And_1Ux1U_1U_4_62_out1.read();
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_10(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_10 = 0ULL;
      break;
    case 2ULL: 
      s_reg_10 = dut_N_Mux_16_2_25_4_56_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_11(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_11 = 0ULL;
      break;
    case 2ULL: 
      s_reg_11 = dut_N_Mux_16_2_25_4_55_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_12(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_12 = 0ULL;
      break;
    case 2ULL: 
      s_reg_12 = dut_N_Mux_16_2_25_4_54_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_14(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_14 = 1ULL;
      break;
    case 2ULL: 
      s_reg_14 = dut_N_Mux_16_2_25_4_60_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_4bx2i1c
// resource: regr_en_4
void dut::drive_s_reg_15_slice(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 4ULL: case 5ULL: 
      s_reg_15_slice = 0ULL;
      break;
    case 1ULL: 
      s_reg_15_slice = (sc_uint<4> ) (dut_Add_4U_6_4_27_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_3bx2i1c
// resource: regr_en_3
void dut::drive_s_reg_16(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 4ULL: case 5ULL: 
      s_reg_16 = 0ULL;
      break;
    case 3ULL: 
      s_reg_16 = (sc_uint<3> )s_reg_15_slice.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_17(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 3ULL: case 4ULL: case 5ULL: 
      s_reg_17 = dut_GreaterThan_1U_15_4_7_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_18(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 3ULL: case 4ULL: case 5ULL: 
      s_reg_18 = dut_And_1Ux1U_1U_4_11_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_19(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 3ULL: case 4ULL: case 5ULL: 
      s_reg_19 = dut_And_1Ux1U_1U_4_12_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_20(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 3ULL: case 4ULL: case 5ULL: 
      s_reg_20 = dut_And_1Ux1U_1U_4_13_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_21(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_21 = dut_OrReduction_3U_1U_4_14_out1.read();
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_22(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_22 = dut_Equal_1U_8_4_23_out1.read();
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void dut::drive_s_reg_23(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    if ( !din_data.read() ) {
      s_reg_23 = dut_And_1Ux1U_1U_4_25_out1.read();
    } else {
      s_reg_23 = dut_Equal_1U_14_4_18_out1.read();
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void dut::drive_s_reg_24(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    if ( !din_data.read() ) {
      s_reg_24 = dut_And_1Ux1U_1U_4_26_out1.read();
    } else {
      s_reg_24 = dut_Equal_1U_13_4_19_out1.read();
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_25(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_25 = dut_Equal_1U_12_4_20_out1.read();
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_26(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_26 = dut_Equal_1U_11_4_15_out1.read();
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_27(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_27 = dut_Equal_1U_10_4_22_out1.read();
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_29(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_29 = dut_Equal_1U_5_4_24_out1.read();
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_33(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_33 = din_data.read();
    break;
  }
}
// resource: regr_en_4
void dut::drive_s_reg_6_slice(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 4ULL: case 5ULL: 
      s_reg_6_slice = (sc_uint<4> ) (dut_Add_4U_6_4_6_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_7(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_7 = 0ULL;
      break;
    case 2ULL: 
      s_reg_7 = dut_N_Mux_16_2_25_4_59_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_8(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_8 = 0ULL;
      break;
    case 2ULL: 
      s_reg_8 = dut_N_Mux_16_2_25_4_58_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_16bx2i1c
// resource: regr_en_16
void dut::drive_s_reg_9(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 5ULL: 
      s_reg_9 = 0ULL;
      break;
    case 2ULL: 
      s_reg_9 = dut_N_Mux_16_2_25_4_57_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_3bx2i1c
void dut::drive_dut_Add_4U_6_4_6_in1(){
  if ( gs_ctrl_thread1_h10.read() ) {
    dut_Add_4U_6_4_6_in1 = (sc_uint<3> )s_reg_6_slice.read();
  } else {
    dut_Add_4U_6_4_6_in1 = 0ULL;
  }
}
// resource: dut_Add_4U_6_4  instance: dut_Add_4U_6_4_6
void dut::dut_Add_4U_6_4_6(){
  dut_Add_4U_6_4_6_out1 = (/*cliff*/sc_uint<32>)(dut_Add_4U_6_4_6_in1.read() + 
                          1ULL);
}
// resource: mux_4bx2i1c
void dut::drive_dut_GreaterThan_1U_15_4_7_in1_slice(){
  if ( gs_ctrl_thread1_h8.read() ) {
    dut_GreaterThan_1U_15_4_7_in1_slice = (sc_int<4> ) (s_reg_15_slice.read());
  } else {
    dut_GreaterThan_1U_15_4_7_in1_slice = 0LL;
  }
}
// resource: dut_GreaterThan_1U_15_4  instance: dut_GreaterThan_1U_15_4_7
void dut::dut_GreaterThan_1U_15_4_7(){
  dut_GreaterThan_1U_15_4_7_out1 = (/*imp*/sc_uint<1>)(((/*imp*/sc_int<5> )(( (
                                   sc_int<5> )(sc_bv<5>)((sc_bv<1>)(0ULL), 
                                   (sc_bv<4>)((sc_int<4> )
                                   dut_GreaterThan_1U_15_4_7_in1_slice.read()))
                                    ))) > (sc_int<2> )0LL);
}
// resource: mux_3bx2i1c
void dut::drive_dut_Equal_1U_14_4_8_in1(){
  if ( gs_ctrl_thread1_h8.read() ) {
    dut_Equal_1U_14_4_8_in1 = (sc_uint<3> )s_reg_15_slice.read();
  } else {
    dut_Equal_1U_14_4_8_in1 = 0ULL;
  }
}
// resource: dut_Equal_1U_14_4  instance: dut_Equal_1U_14_4_8
void dut::dut_Equal_1U_14_4_8(){
  dut_Equal_1U_14_4_8_out1 = (dut_Equal_1U_14_4_8_in1.read() == 7ULL);
}
// resource: dut_Equal_1U_13_4  instance: dut_Equal_1U_13_4_9
void dut::dut_Equal_1U_13_4_9(){
  dut_Equal_1U_13_4_9_out1 = (dut_Equal_1U_14_4_8_in1.read() == 6ULL);
}
// resource: dut_Equal_1U_12_4  instance: dut_Equal_1U_12_4_10
void dut::dut_Equal_1U_12_4_10(){
  dut_Equal_1U_12_4_10_out1 = (dut_Equal_1U_14_4_8_in1.read() == 5ULL);
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_11
void dut::dut_And_1Ux1U_1U_4_11(){
  dut_And_1Ux1U_1U_4_11_out1 = dut_Equal_1U_14_4_8_out1.read() & 
                               dut_GreaterThan_1U_15_4_7_out1.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_12
void dut::dut_And_1Ux1U_1U_4_12(){
  dut_And_1Ux1U_1U_4_12_out1 = dut_Equal_1U_13_4_9_out1.read() & 
                               dut_GreaterThan_1U_15_4_7_out1.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_13
void dut::dut_And_1Ux1U_1U_4_13(){
  dut_And_1Ux1U_1U_4_13_out1 = dut_Equal_1U_12_4_10_out1.read() & 
                               dut_GreaterThan_1U_15_4_7_out1.read();
}
// resource: dut_OrReduction_3U_1U_4  instance: dut_OrReduction_3U_1U_4_14
void dut::dut_OrReduction_3U_1U_4_14(){
  dut_OrReduction_3U_1U_4_14_out1 = ((sc_uint<3>)( (sc_uint<3> )(( (sc_uint<5> )
                                    (sc_bv<5>)((sc_bv<1>)(0ULL), 
                                    (sc_bv<4>)(s_reg_15_slice.read())) )) ))
                                    .or_reduce();
}
// resource: dut_Equal_1U_11_4  instance: dut_Equal_1U_11_4_15
void dut::dut_Equal_1U_11_4_15(){
  dut_Equal_1U_11_4_15_out1 = (s_reg_16.read() == 4ULL);
}
// resource: dut_Equal_1U_10_4  instance: dut_Equal_1U_10_4_22
void dut::dut_Equal_1U_10_4_22(){
  dut_Equal_1U_10_4_22_out1 = (s_reg_16.read() == 3ULL);
}
// resource: dut_Equal_1U_8_4  instance: dut_Equal_1U_8_4_23
void dut::dut_Equal_1U_8_4_23(){
  dut_Equal_1U_8_4_23_out1 = (s_reg_16.read() == 2ULL);
}
// resource: dut_Equal_1U_14_4  instance: dut_Equal_1U_14_4_18
void dut::dut_Equal_1U_14_4_18(){
  dut_Equal_1U_14_4_18_out1 = (s_reg_16.read() == 7ULL);
}
// resource: dut_Equal_1U_13_4  instance: dut_Equal_1U_13_4_19
void dut::dut_Equal_1U_13_4_19(){
  dut_Equal_1U_13_4_19_out1 = (s_reg_16.read() == 6ULL);
}
// resource: dut_Equal_1U_12_4  instance: dut_Equal_1U_12_4_20
void dut::dut_Equal_1U_12_4_20(){
  dut_Equal_1U_12_4_20_out1 = (s_reg_16.read() == 5ULL);
}
// resource: dut_Equal_1U_5_4  instance: dut_Equal_1U_5_4_24
void dut::dut_Equal_1U_5_4_24(){
  dut_Equal_1U_5_4_24_out1 = (s_reg_16.read() == 1ULL);
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_25
void dut::dut_And_1Ux1U_1U_4_25(){
  dut_And_1Ux1U_1U_4_25_out1 = dut_Equal_1U_11_4_15_out1.read() & s_reg_17
                               .read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_26
void dut::dut_And_1Ux1U_1U_4_26(){
  dut_And_1Ux1U_1U_4_26_out1 = dut_Equal_1U_10_4_22_out1.read() & s_reg_17
                               .read();
}
// resource: dut_Add_4U_6_4  instance: dut_Add_4U_6_4_27
void dut::dut_Add_4U_6_4_27(){
  dut_Add_4U_6_4_27_out1 = (/*cliff*/sc_uint<32>)((sc_uint<3> )(( (sc_uint<5> )
                           (sc_bv<5>)((sc_bv<1>)(0ULL), 
                           (sc_bv<4>)(s_reg_15_slice.read())) )) + 1ULL);
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_29
void dut::dut_Not_1U_1U_4_29(){
  dut_Not_1U_1U_4_29_out1 = !s_reg_21.read();
}
// resource: dut_N_Mux_16_8_22_4
void dut::dut_N_Mux_16_8_22_4_30(){
  switch( (sc_uint<3>)(s_reg_16.read()) ) {
  default:
    dut_N_Mux_16_8_22_4_30_out1 = dout_data.read();
    break;
  case 1ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_14.read();
    break;
  case 2ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_7.read();
    break;
  case 3ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_8.read();
    break;
  case 4ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_9.read();
    break;
  case 5ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_10.read();
    break;
  case 6ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_11.read();
    break;
  case 7ULL: 
    dut_N_Mux_16_8_22_4_30_out1 = s_reg_12.read();
    break;
  }
}
// resource: dut_N_Mux_16_8_23_4
void dut::dut_N_Mux_16_8_23_4_31(){
  switch( (sc_uint<3>)(s_reg_16.read()) ) {
  default:
    dut_N_Mux_16_8_23_4_31_out1 = dout_data.read();
    break;
  case 0ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_14.read();
    break;
  case 1ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_7.read();
    break;
  case 2ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_8.read();
    break;
  case 3ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_9.read();
    break;
  case 4ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_10.read();
    break;
  case 5ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_11.read();
    break;
  case 6ULL: 
    dut_N_Mux_16_8_23_4_31_out1 = s_reg_12.read();
    break;
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_32(){
  if ( s_reg_23.read() ) {
    dut_N_Mux_16_2_24_4_32_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_32_out1 = dout_data.read();
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_33(){
  if ( s_reg_24.read() ) {
    dut_N_Mux_16_2_24_4_33_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_33_out1 = s_reg_12.read();
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_34(){
  if ( s_reg_25.read() ) {
    dut_N_Mux_16_2_24_4_34_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_34_out1 = s_reg_11.read();
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_35(){
  if ( s_reg_26.read() ) {
    dut_N_Mux_16_2_24_4_35_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_35_out1 = s_reg_10.read();
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_36(){
  if ( s_reg_27.read() ) {
    dut_N_Mux_16_2_24_4_36_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_36_out1 = s_reg_9.read();
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_37(){
  if ( s_reg_22.read() ) {
    dut_N_Mux_16_2_24_4_37_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_37_out1 = s_reg_8.read();
  }
}
// resource: dut_N_Mux_16_2_24_4
void dut::dut_N_Mux_16_2_24_4_38(){
  if ( s_reg_29.read() ) {
    dut_N_Mux_16_2_24_4_38_out1 = 0ULL;
  } else {
    dut_N_Mux_16_2_24_4_38_out1 = s_reg_7.read();
  }
}
// resource: dut_N_Mux_16_2_26_4
void dut::dut_N_Mux_16_2_26_4_39(){
  if ( s_reg_21.read() ) {
    dut_N_Mux_16_2_26_4_39_out1 = s_reg_14.read();
  } else {
    dut_N_Mux_16_2_26_4_39_out1 = 0ULL;
  }
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_40
void dut::dut_And_1Ux1U_1U_4_40(){
  dut_And_1Ux1U_1U_4_40_out1 = s_reg_22.read() & s_reg_17.read();
}
void dut::drive_dut_LessThan_1U_17_1_41_in1(){
  dut_LessThan_1U_17_1_41_in1 = (sc_int<5> )((sc_uint<4> )s_reg_15_slice.read())
  ;
}
// resource: dut_LessThan_1U_17_1  instance: dut_LessThan_1U_17_1_41
void dut::dut_LessThan_1U_17_1_41(){
  dut_LessThan_1U_17_1_41_out1 = (/*imp*/sc_uint<1>)(dut_LessThan_1U_17_1_41_in1
                                 .read() < (sc_int<5> )8LL);
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_42
void dut::dut_And_1Ux1U_1U_4_42(){
  dut_And_1Ux1U_1U_4_42_out1 = dut_Equal_1U_5_4_24_out1.read() & s_reg_17.read()
  ;
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_43
void dut::dut_And_1Ux1U_1U_4_43(){
  dut_And_1Ux1U_1U_4_43_out1 = dut_Not_1U_1U_4_29_out1.read() & s_reg_17.read();
}
// resource: dut_Add_16Ux16U_16U_4  instance: dut_Add_16Ux16U_16U_4_44
void dut::dut_Add_16Ux16U_16U_4_44(){
  dut_Add_16Ux16U_16U_4_44_out1 = (dut_N_Mux_16_8_23_4_31_out1.read() + 
                                  dut_N_Mux_16_8_22_4_30_out1.read());
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_45(){
  if ( s_reg_18.read() ) {
    dut_N_Mux_16_2_25_4_45_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_45_out1 = dout_data.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_46(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_46_out1 = dut_N_Mux_16_2_24_4_32_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_46_out1 = dut_N_Mux_16_2_25_4_45_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_47(){
  if ( s_reg_19.read() ) {
    dut_N_Mux_16_2_25_4_47_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_47_out1 = s_reg_12.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_48(){
  if ( s_reg_20.read() ) {
    dut_N_Mux_16_2_25_4_48_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_48_out1 = s_reg_11.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_49(){
  if ( s_reg_23.read() ) {
    dut_N_Mux_16_2_25_4_49_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_49_out1 = s_reg_10.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_50(){
  if ( s_reg_24.read() ) {
    dut_N_Mux_16_2_25_4_50_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_50_out1 = s_reg_9.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_51(){
  if ( dut_And_1Ux1U_1U_4_40_out1.read() ) {
    dut_N_Mux_16_2_25_4_51_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_51_out1 = s_reg_8.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_52(){
  if ( dut_And_1Ux1U_1U_4_42_out1.read() ) {
    dut_N_Mux_16_2_25_4_52_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_52_out1 = s_reg_7.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_53(){
  if ( dut_And_1Ux1U_1U_4_43_out1.read() ) {
    dut_N_Mux_16_2_25_4_53_out1 = dut_Add_16Ux16U_16U_4_44_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_53_out1 = s_reg_14.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_54(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_54_out1 = dut_N_Mux_16_2_24_4_33_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_54_out1 = dut_N_Mux_16_2_25_4_47_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_55(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_55_out1 = dut_N_Mux_16_2_24_4_34_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_55_out1 = dut_N_Mux_16_2_25_4_48_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_56(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_56_out1 = dut_N_Mux_16_2_24_4_35_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_56_out1 = dut_N_Mux_16_2_25_4_49_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_57(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_57_out1 = dut_N_Mux_16_2_24_4_36_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_57_out1 = dut_N_Mux_16_2_25_4_50_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_58(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_58_out1 = dut_N_Mux_16_2_24_4_37_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_58_out1 = dut_N_Mux_16_2_25_4_51_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_59(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_59_out1 = dut_N_Mux_16_2_24_4_38_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_59_out1 = dut_N_Mux_16_2_25_4_52_out1.read();
  }
}
// resource: dut_N_Mux_16_2_25_4
void dut::dut_N_Mux_16_2_25_4_60(){
  if ( s_reg_33.read() ) {
    dut_N_Mux_16_2_25_4_60_out1 = dut_N_Mux_16_2_26_4_39_out1.read();
  } else {
    dut_N_Mux_16_2_25_4_60_out1 = dut_N_Mux_16_2_25_4_53_out1.read();
  }
}
void dut::drive_dut_LessThan_1U_17_1_61_in1(){
  dut_LessThan_1U_17_1_61_in1 = (sc_int<5> )((sc_uint<4> )s_reg_6_slice.read());
}
// resource: dut_LessThan_1U_17_1  instance: dut_LessThan_1U_17_1_61
void dut::dut_LessThan_1U_17_1_61(){
  dut_LessThan_1U_17_1_61_out1 = (/*imp*/sc_uint<1>)(dut_LessThan_1U_17_1_61_in1
                                 .read() < (sc_int<5> )8LL);
}
// resource: regr_en_sc_3
void dut::drive_global_state(){
  if ( (rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_3bx4i3c
void dut::drive_global_state_next(){
  switch( (sc_uint<3>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 3ULL: case 4ULL: case 5ULL: 
    global_state_next = 1ULL;
    break;
  case 2ULL: 
    if ( dut_LessThan_1U_17_1_41_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      if ( dut_LessThan_1U_17_1_61_out1.read() ) {
        global_state_next = 4ULL;
      } else {
        global_state_next = 5ULL;
      }
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void dut::drive_gs_ctrl_thread1_h10(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl_thread1_h10 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl_thread1_h10 = 0ULL;
        break;
      case 4ULL: 
        gs_ctrl_thread1_h10 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void dut::drive_gs_ctrl_thread1_h8(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl_thread1_h8 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl_thread1_h8 = 0ULL;
        break;
      case 3ULL: 
        gs_ctrl_thread1_h8 = 1ULL;
        break;
      }
      break;
    }
  }
}
void dut::drive_din_busy(){
  din_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) dut_gen_busy_r_4_64_out1
             .read().range(2,2)));
}
// resource: dut_gen_busy_r_4  instance: dut_gen_busy_r_4_64
void dut::dut_gen_busy_r_4_64_p7(){
  dut_gen_busy_r_4_64_out1 = (sc_uint<3> ) (( (sc_biguint<3> )(sc_bv<3>)(
                             (sc_bv<1>)(dut_gen_busy_r_4_64_gnew_req.read()), 
                             (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)((sc_bv<1>)(
                             dut_gen_busy_r_4_64_gdiv.read()), 
                             (sc_bv<1>)(dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next
                             .read())) ))) ));
}
// resource: dut_gen_busy_r_4  instance: dut_gen_busy_r_4_64
void dut::dut_gen_busy_r_4_64_p6(){
  dut_gen_busy_r_4_64_din_gen_busy_din_m_data_is_invalid_next = ~(sc_uint<1>)dut_gen_busy_r_4_64_gdiv
                                                                .read();
}
// resource: dut_gen_busy_r_4  instance: dut_gen_busy_r_4_64
void dut::dut_gen_busy_r_4_64_p5(){
  dut_gen_busy_r_4_64_gdiv = (sc_uint<1> ) ((sc_uint<1> )din_vld.read() & !
                             dut_gen_busy_r_4_64_gnew_req.read());
}
// resource: dut_gen_busy_r_4  instance: dut_gen_busy_r_4_64
void dut::dut_gen_busy_r_4_64_p4(){
  dut_gen_busy_r_4_64_gnew_req = (sc_uint<1> ) ((sc_uint<1> )din_m_busy_req_0
                                 .read() & ( din_m_unvalidated_req.read() | 
                                 din_vld.read() ));
}
// resource: regr_ss_1
void dut::drive_din_m_unvalidated_req(){
  if ( (rst.read() == 0ULL) ) {
    din_m_unvalidated_req = 1ULL;
  } else {
    din_m_unvalidated_req = (sc_uint<1> ) (dut_N_Muxb_1_2_16_4_4_out1.read());
  }
}
// resource: dut_N_Muxb_1_2_16_4
void dut::dut_N_Muxb_1_2_16_4_4(){
  if ( din_m_busy_req_0.read() ) {
    dut_N_Muxb_1_2_16_4_4_out1 = (sc_uint<1> ) (din_m_unvalidated_req.read());
  } else {
    dut_N_Muxb_1_2_16_4_4_out1 = (sc_uint<1> ) (din_vld.read());
  }
}
void dut::drive_dout_vld(){
  dout_vld = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_2
void dut::dut_Or_1Ux1U_1U_4_2(){
  dut_Or_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (dout_m_unacked_req.read() | (
                             sc_uint<1>)dut_Xor_1Ux1U_1U_1_1_out1.read());
}
// resource: regr_sc_1
void dut::drive_dout_m_unacked_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_unacked_req = 0ULL;
  } else {
    dout_m_unacked_req = (sc_uint<1> ) (dut_And_1Ux1U_1U_4_62_out1.read());
  }
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_62
void dut::dut_And_1Ux1U_1U_4_62(){
  dut_And_1Ux1U_1U_4_62_out1 = dout_busy.read() & dout_vld.read();
}
// resource: dut_Xor_1Ux1U_1U_1  instance: dut_Xor_1Ux1U_1U_1_1
void dut::dut_Xor_1Ux1U_1U_1_1(){
  dut_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (dout_m_req_m_trig_req.read() ^ 
                              dout_m_req_m_prev_trig_req.read());
}
// resource: regr_sc_1
void dut::drive_dout_m_req_m_prev_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_prev_trig_req = 0ULL;
  } else {
    dout_m_req_m_prev_trig_req = dout_m_req_m_trig_req.read();
  }
}
// resource: dut_Not_1U_1U_1  instance: dut_Not_1U_1U_1_3
void dut::dut_Not_1U_1U_1_3(){
  dut_Not_1U_1U_1_3_out1 = !dout_m_req_m_trig_req.read();
}
